{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameRandomId","shortid","generate","numberRandomId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","htmlFor","onChange","input","type","pattern","title","required","id","btn","Component","ContactList","contacts","onDelete","map","item","span","onClick","Filter","onFilter","App","useState","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","newContact","find","con","toLowerCase","alert","prevContacts","target","contact","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c25d6da1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1qI0D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__VVixD\",\"label\":\"ContactForm_label__2VYZ7\",\"input\":\"ContactForm_input__2g54J\",\"btn\":\"ContactForm_btn__-eg1U\"};","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport s from 'Components/ContactForm/ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameRandomId = shortid.generate();\n  numberRandomId = shortid.generate();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className={s.form}>\n          <label className={s.label} htmlFor={this.nameRandomId}>\n            Name:\n            <input\n              onChange={this.handleChange}\n              value={this.state.name}\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n\n          <label htmlFor={this.numberRandomId} className={s.label}>\n            Number:\n            <input\n              className=\"{ }\"\n              value={this.state.number}\n              id={this.numberRandomId}\n              onChange={this.handleChange}\n              name=\"number\"\n              type=\"tel\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button type=\"submit\" className={s.btn}>\n            Add Contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport s from 'Components/ContactList/ContactList.module.css';\n\nexport default function ContactList({ contacts, onDelete }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <span className={s.span}>{name}: </span>\n          <span className={s.span}>{number}</span>\n          <button onClick={() => onDelete(id)} className={s.btn}>\n            DELETE!!!!!\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n  }),\n  onDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from 'Components/Filter/Filter.module.css';\n\nexport default function Filter({ value, onFilter }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onFilter}></input>\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  onFilter: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from 'Components/ContactForm/ContactForm';\nimport ContactList from 'Components/ContactList/ContactList';\nimport Filter from 'Components/Filter/Filter';\n\nimport './App.css';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (\n      // contacts.filter(contact => contact.name.toLowerCase().includes(contact)).length > 0\n      contacts.find(\n        con => con.name.toLowerCase() === newContact.name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is alresdy in contacts`);\n      return;\n    }\n    setContacts(prevContacts => [newContact, ...prevContacts]);\n  };\n\n  const onFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const onContactsFilter = () => {\n    // const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const onDelete = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n    // setContacts(prevContacts => ({\n    //    contacts.filter(contact => contact.id !== contactId),\n    // }));\n  };\n\n  return (\n    <div className=\"block\">\n      <h2>Phonebook</h2>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onFilter={onFilter} />\n      <ContactList contacts={onContactsFilter()} onDelete={onDelete} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__2r5em\",\"item\":\"ContactList_item__1113r\",\"span\":\"ContactList_span__1TKWU\"};"],"sourceRoot":""}